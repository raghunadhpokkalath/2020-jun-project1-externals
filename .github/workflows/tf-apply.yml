name: "Terraform Apply"

# Trigger when commits are pushed to the master branch
on:
  push:
    branches:
      - master

jobs:
  terraform-plan:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0
       

      # Provides AWS credentials to Terraform
      # By default, Terraform checks the home directory for a .aws folder with a credential file
      # Documentation: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/create-shared-credentials-file.html
      - name: "Setup - Build AWS Credentials"
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
                
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      
      - name: "Setup Environment Variables"
        run: |
          touch .env
          echo AWS_ACCESS_KEY_ID =${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY = ${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          cd terraform
          touch backend.tfvars
          printf "bucket=\"${{ secrets.S3_BUCKET_NAME }}\"" >> backend.tfvars
          printf "\nkey=\"terraform.tfstate\"" >> backend.tfvars
          printf "\nregion=\"ap-southeast-2\"" >> backend.tfvars  
          printf "your_home_network_cidr=\"${{ secrets.HOME_NETWORK_IP_CIDR }}\"" >>  terraform.tfvars
          printf "\nalb_certificate_arn= \"${{ secrets.SSL_CERTIFCATE_ARN }}\"" >> terraform.tfvars
          printf "\ndns_name =\"${{ secrets.DNS_NAME }}\"" >> terraform.tfvars
          printf "\nzone_id = \"${{ secrets.HOSTED_ZONE_ID }}\"" >> terraform.tfvars
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     
            
    
      - name: "Terraform apply"
        id: apply
        run: |
          make plan 
          make apply
      - name: "Rebuild Docker Image and Publish to ECR Repo"
        id: dockerbuild
        run: |
          make build
          make publish
          make deploy-wp    
